import axios from 'axios';

const APP_ID = 'cd03db95-7c1c-42a2-960f-a052c29348df';
const NETWORK_ID = 34200;

export const getWithSession = async (url, sessionID, params = {}) => {
  if (!sessionID) throw new Error('sessionID –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω');

  try {
    const fullUrl = url.trim();
    const response = await axios.get(fullUrl, {
      params: {
        appID: APP_ID,
        sessionID,
        networkId: NETWORK_ID,
        ...params,
      },
    });
    return response.data;
  } catch (error) {
    console.error('GET-–∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è:', error.response?.data || error.message);
    throw error;
  }
};

export const postWithSession = async (url, data, sessionID, params = {}) => {
  if (!sessionID) throw new Error('sessionID –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω');

  try {
    const fullUrl = url.trim();
    const response = await axios.post(fullUrl, data, {
      params: {
        appID: APP_ID,
        sessionID,
        networkId: NETWORK_ID,
        ...params,
      },
    });
    return response.data;
  } catch (error) {
    console.error('POST-–∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è:', error.response?.data || error.message);
    throw error;
  }
};

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ ‚Äî structure = –∏–º—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ Directual
 */
export const createRecord = async (structure, data, sessionID) => {
  try {
    // üîÅ URL –¥–æ–ª–∂–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–µ ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: /audits/CreateAudits
    const response = await postWithSession(
      `https://api.directual.com/good/api/v5/data/${structure}/CreateAudits`,
      data,
      sessionID
    );
    return response;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏:', error.response?.data || error.message);
    throw error;
  }
};